PRAGMA foreign_keys = ON;
CREATE TABLE IF NOT EXISTS artist (
	id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
	name VARCHAR(255) NOT NULL
);
CREATE TABLE IF NOT EXISTS album (
	id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
        name VARCHAR(255) NOT NULL
);
CREATE TABLE IF NOT EXISTS composition (
	id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
	compositionPath VARCHAR(255) NOT NULL UNIQUE,
        compositionName VARCHAR(255) NOT NULL,
        compositionYear INTEGER NULL,
	idAlbum INTEGER NOT NULL,
	FOREIGN KEY (idAlbum) REFERENCES album (id)
		ON DELETE RESTRICT
		ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS playlist (
	id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
	name VARCHAR(255) NOT NULL UNIQUE
);
CREATE TABLE IF NOT EXISTS playlist_composition (
	idComposition INTEGER NOT NULL,
	idPlaylist INTEGER NOT NULL,
	PRIMARY KEY (idComposition, idPlaylist),
	FOREIGN KEY (idComposition) REFERENCES composition (id)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY (idPlaylist) REFERENCES playlist (id)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS artist_composition (
	idComposition INTEGER NOT NULL,
	idArtist INTEGER NOT NULL,
	PRIMARY KEY (idComposition, idArtist),
	FOREIGN KEY (idComposition) REFERENCES composition (id)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY (idArtist) REFERENCES artist (id)
                ON DELETE RESTRICT
		ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS streaming_audio (
        id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
        link VARCHAR(255) NOT NULL UNIQUE,
        name VARCHAR(255) NOT NULL
);
INSERT INTO playlist VALUES (0, 'playQueue');
